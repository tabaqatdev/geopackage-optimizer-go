name: Build and Publish Docker Image (GHCR)

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  docker:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value=master,enable=${{ github.ref == 'refs/heads/master' }}
            type=ref,event=tag,prefix=v

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sanitize ref name
        id: sanitize_ref
        shell: bash
        run: |
          ref="${GITHUB_REF_NAME:-${GITHUB_REF##*/}}"
          sanitized=$(echo "$ref" | tr '/\\' '__')
          echo "sanitized_ref=$sanitized" >> $GITHUB_OUTPUT

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.sanitize_ref.outputs.sanitized_ref || github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          platforms: linux/amd64,linux/arm64

      - name: Move cache (temp fix)
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache