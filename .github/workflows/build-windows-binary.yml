name: build-windows-binary
env:
  binary_name: geopackage-optimizer
on:
  push:
    branches:
      - master
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-sqlite3
            mingw-w64-x86_64-libspatialite
            mingw-w64-x86_64-gdal
            git
            make

      - name: Install UUID extension
        shell: msys2 {0}
        run: |
          git clone https://github.com/benwebber/sqlite3-uuid.git
          cd sqlite3-uuid
          make
          cp dist/uuid.so.* /mingw64/lib/uuid.so

      - name: Setup version
        id: get_version
        shell: bash
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=dev" >> $GITHUB_OUTPUT
          fi

      - name: Run tests
        shell: msys2 {0}
        run: |
          export PATH=$PATH:/mingw64/bin
          export CGO_ENABLED=1
          export GOOS=windows
          export GOARCH=amd64
          export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig
          go test ./... -covermode=atomic

      - name: Build Windows binary
        shell: msys2 {0}
        run: |
          export PATH=$PATH:/mingw64/bin
          export CGO_ENABLED=1
          export GOOS=windows
          export GOARCH=amd64
          export PKG_CONFIG_PATH=/mingw64/lib/pkgconfig
          go build -v -ldflags="-s -w -linkmode external -extldflags '-static'" -o ${{ env.binary_name }}-${{ steps.get_version.outputs.version }}-windows-amd64.exe .

      - name: Upload artifact
        uses: actions/upload-artifact@v4  # Updated to v4
        with:
          name: ${{ env.binary_name }}-${{ steps.get_version.outputs.version }}-windows-amd64
          path: ${{ env.binary_name }}-${{ steps.get_version.outputs.version }}-windows-amd64.exe

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ env.binary_name }}-${{ steps.get_version.outputs.version }}-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
